httpsではなくhttp
トレイリングスラッシュは無し(全てにおいて、つけるとエラー)
トランザクションid
正しいマイナーのアドレスは2番目

#############実際のbitcoinとの相違点#####################

・20秒の待ち時間
・空のトランザクションの時にマイニングをしない
・同じアドレスを使う
・インターネット(www)に接続できない
・/mine/startに接続して初めてマイニングを始める
・チェックサム無効
・difficultyの自動設定機能(ただしP2Pでdifficultyを共有する必要あり)
・発行上限の設定
・手数料
・自分の希望したチェーンを採掘できない（チェーンのアップデートが強制）
・マイニングしてない
・ルートハッシュ
・トランザクションid

######################確認点###########################

・アドレス入力しなくても送れてしまう。
・ポート8080からはポート5000としか通信できない
・ソフトフォーク時の対応は？
・自分自身への送金は？
・nonceをランダムな番号でスタートするようにする(マイナー自身のtxが入るため不要)
・IPアドレス自動選択機能未実装
・errorが入らない。削除する [fi:ver1.1.0]
・ブロックの承認→要求されたTX空を実行する
・他のノードがマイニングを成功させたら、自分のマイニングを中止してリセットしているか？
・8080,8081　parameters　非対称
・wallet.serverの__main__においてhttp://127.0.0.1:5000をhttp://192.168.0.10:5000に変更 P2P形成不能　192.168.0.9で解決
・マイニング競争が発生している　それによりTXが空になるバグ発生
・送金可能額以上を送ろうとしたときfailがアラートされない [fi:ver1.0.0]
・同じpool内において二重送金ができてしまう(送金可能額の計算がpoolに及んでいないため)
・プライベートキー、パブリックキーはそのままで、BTCアドレスだけを変えても送金できてしまう。そもそも送金時のパブリックキーsignetureとBTCアドレスのリンクが確認されていない
・他デバイスとP2Pできない
・-1コイン、0コインで送金できてしまう



######################改善点###########################

・パブリックキーをブラウザに表示しない [fi:ver1.2.0]
・ブラウザに入力したプライベートキーのみからパブリックキーを生成して送金し、パブリックキーを入力しなくてよくする
・ブラウザに赤い波線を表示させない [fi:ver1.1.0]
・ブラウザにアドレスコピーボタンをつける
・ブラウザに背景色をつける
・ブラウザにQRコードを設置する[ver 1.3.0]
・スマートコントラクトの実装(国語の古典ノートにある)(ノートから初め段階的な実装)
・dat形式でのブロックチェーンの保存(with open aで書き加えていく)（ファイル名は自身のポート番号）
・wwwでの接続
・SSL化
・自動で適切なポートを選択し、開放する。
・ダウンロードしてpycharmなしで実行できるようにする
・マスタープライベートキーの生成
・（マイニング速度制限）
・送金中、送金完了をブラウザ上で表示する
・マイニングシェア率をブラウザ上で表示する
・送金相手、送金額のレビュー(アラートかブラウザ)
・送金履歴(チェーンから取得、ブラウザで表示)
・異なってしまうIPアドレスでP2Pを形成する
・小数第何位まで送金できるか？制限する


＋上記の問題点の克服


######################配布時###########################

・マスターexeファイル
・自動アップデート
・flaskなどのインストールの必要性


##############################################
#MY_IPADDRESSの定義
5050portを立ち上げたとき、2番目に出てくるのが正しい鍵








################################################







    # print(wallet.private_key)  # ここではprivate_key関数を指す。関数の()不要。
    # print(wallet.public_key)  # ここではpublic_key関数を指す。関数の()不要。
    # print(wallet.blockchain_address)  # ここではblockchain_address関数を指す。関数の()不要。